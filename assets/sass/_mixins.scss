// GLOBAL MIXINS
@mixin boxShadow($offsetX, $offsetY, $blurRadius, $shadowColour) {
  box-shadow: $offsetX $offsetY $blurRadius $shadowColour;
  -moz-box-shadow: $offsetX $offsetY $blurRadius $shadowColour;
  -webkit-box-shadow: $offsetX $offsetY $blurRadius $shadowColour;
}

@mixin background($url, $position1, $position2, $repeat, $cover) {
  background-image: url($url);
  background-position: $position1, $position2;
  background-repeat: $repeat;
  -webkit-background-size: $cover;
  -moz-background-size: $cover;
  -o-background-size: $cover;
  background-size: $cover;
}

@function calculateRem($size) {
  $remSize: calc($size / 16px);
  @return #{$remSize}rem;
}

@mixin lineHeight($size) {
  line-height: calculateRem($size);
}

@mixin remFont($size) {
  font-size: calculateRem($size);
}

@mixin remPad($size1, $size2) {
  padding: calculateRem($size1) calculateRem($size2);
}

@mixin remPadAllMulti($top, $right, $bottom, $left) {
  padding: calculateRem($top) calculateRem($right) calculateRem($bottom) calculateRem($left);
}

@mixin remPadAll($size) {
  padding: calculateRem($size);
}

@mixin remPadTop($size) {
  padding-top: calculateRem($size);
}

@mixin remPadBot($size) {
  padding-bottom: calculateRem($size);
}

@mixin remPadLeft($size) {
  padding-left: calculateRem($size);
}

@mixin remPadRight($size) {
  padding-right: calculateRem($size);
}

@mixin remPadTopBot($size) {
  padding-top: calculateRem($size);
  padding-bottom: calculateRem($size);
}

@mixin remPadLeftRight($size) {
  padding-left: calculateRem($size);
  padding-right: calculateRem($size);
}

@mixin remMargin($size1, $size2) {
  margin: calculateRem($size1) calculateRem($size2);
}

@mixin remMarginTop($size) {
  margin-top: calculateRem($size);
}

@mixin remMarginBot($size) {
  margin-bottom: calculateRem($size);
}

@mixin remMarginLeft($size) {
  margin-left: calculateRem($size);
}

@mixin remMarginRight($size) {
  margin-right: calculateRem($size);
}